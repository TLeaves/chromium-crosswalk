// Copyright 2022 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is generated from:
//   tests/colors_ref_tokens_test.json5
//   tests/colors_sys_tokens_test.json5

#ifndef NONE_
#define NONE_

#include "base/component_export.h"
#include "ui/color/color_id.h"

namespace ui {
class ColorMixer;
}

namespace test_tokens {

#include "ui/color/color_id_macros.inc"


#define CROSREF_COLOR_IDS \
E_CPONLY(kCrosRefPrimary50, kCrosRefColorsStart, kCrosRefColorsStart)


enum CrosRefColorIds : ui::ColorId {
  kCrosRefColorsStart = 0xF000,

  CROSREF_COLOR_IDS

  kCrosRefColorsEnd,
};


COMPONENT_EXPORT(test_tokens_COLOR_MAPPINGS) void AddCrosRefColorsToMixer(ui::ColorMixer& mixer, bool dark_mode);


#define CROSSYS_COLOR_IDS \
E_CPONLY(kCrosSysPrimary, kCrosSysColorsStart, kCrosSysColorsStart) \
E_CPONLY(kCrosSysOnPrimary) \
E_CPONLY(kCrosSysPrimaryContainer) \
E_CPONLY(kCrosSysOnPrimaryContainer)


enum CrosSysColorIds : ui::ColorId {
  kCrosSysColorsStart = kCrosRefColorsEnd,

  CROSSYS_COLOR_IDS

  kCrosSysColorsEnd,
};


COMPONENT_EXPORT(test_tokens_COLOR_MAPPINGS) void AddCrosSysColorsToMixer(ui::ColorMixer& mixer, bool dark_mode);

#include "ui/color/color_id_macros.inc"

// clang-format on


COMPONENT_EXPORT(test_tokens_COLOR_MAPPINGS) std::string ColorIdName(ui::ColorId id);

}  // namespace test_tokens

#endif  // NONE_
